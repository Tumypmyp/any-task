/*
 * Anytype API
 *
 * This API enables seamless interaction with Anytype's resources - spaces, objects, properties, types, templates, and beyond.
 *
 * The version of the OpenAPI document: 2025-05-20
 * Contact: support@anytype.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApimodelPeriodObjectWithBody : The object
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApimodelPeriodObjectWithBody {
    /// Whether the object is archived
    #[serde(rename = "archived", skip_serializing_if = "Option::is_none")]
    pub archived: Option<bool>,
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<Box<models::ApimodelPeriodIcon>>,
    /// The id of the object
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The layout of the object
    #[serde(rename = "layout", skip_serializing_if = "Option::is_none")]
    pub layout: Option<String>,
    /// The markdown body of the object
    #[serde(rename = "markdown", skip_serializing_if = "Option::is_none")]
    pub markdown: Option<String>,
    /// The name of the object
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The data model of the object
    #[serde(rename = "object", skip_serializing_if = "Option::is_none")]
    pub object: Option<String>,
    /// The properties of the object
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<Vec<models::ApimodelPeriodCheckboxPropertyValue>>,
    /// The snippet of the object, especially important for notes as they don't have a name
    #[serde(rename = "snippet", skip_serializing_if = "Option::is_none")]
    pub snippet: Option<String>,
    /// The id of the space the object is in
    #[serde(rename = "space_id", skip_serializing_if = "Option::is_none")]
    pub space_id: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Box<models::ApimodelPeriodType>>,
}

impl ApimodelPeriodObjectWithBody {
    /// The object
    pub fn new() -> ApimodelPeriodObjectWithBody {
        ApimodelPeriodObjectWithBody {
            archived: None,
            icon: None,
            id: None,
            layout: None,
            markdown: None,
            name: None,
            object: None,
            properties: None,
            snippet: None,
            space_id: None,
            r#type: None,
        }
    }
}

