/*
 * Anytype API
 *
 * This API enables seamless interaction with Anytype's resources - spaces, objects, properties, types, templates, and beyond.
 *
 * The version of the OpenAPI document: 2025-05-20
 * Contact: support@anytype.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApimodelPeriodTypeLayout : The layout of the type
/// The layout of the type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ApimodelPeriodTypeLayout {
    #[serde(rename = "basic")]
    TypeLayoutBasic,
    #[serde(rename = "profile")]
    TypeLayoutProfile,
    #[serde(rename = "action")]
    TypeLayoutAction,
    #[serde(rename = "note")]
    TypeLayoutNote,

}

impl std::fmt::Display for ApimodelPeriodTypeLayout {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::TypeLayoutBasic => write!(f, "basic"),
            Self::TypeLayoutProfile => write!(f, "profile"),
            Self::TypeLayoutAction => write!(f, "action"),
            Self::TypeLayoutNote => write!(f, "note"),
        }
    }
}

impl Default for ApimodelPeriodTypeLayout {
    fn default() -> ApimodelPeriodTypeLayout {
        Self::TypeLayoutBasic
    }
}

