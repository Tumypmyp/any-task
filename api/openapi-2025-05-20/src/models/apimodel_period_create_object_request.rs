/*
 * Anytype API
 *
 * This API enables seamless interaction with Anytype's resources - spaces, objects, properties, types, templates, and beyond.
 *
 * The version of the OpenAPI document: 2025-05-20
 * Contact: support@anytype.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApimodelPeriodCreateObjectRequest {
    /// The body of the object
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<Box<models::ApimodelPeriodIcon>>,
    /// The name of the object
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// ⚠ Warning: Properties are experimental and may change in the next update. ⚠ The properties to set on the object; see ListTypes or GetType endpoints for linked properties
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<Vec<models::ApimodelPeriodPropertyLinkWithValue>>,
    /// The id of the template to use
    #[serde(rename = "template_id", skip_serializing_if = "Option::is_none")]
    pub template_id: Option<String>,
    /// The key of the type of object to create
    #[serde(rename = "type_key")]
    pub type_key: String,
}

impl ApimodelPeriodCreateObjectRequest {
    pub fn new(type_key: String) -> ApimodelPeriodCreateObjectRequest {
        ApimodelPeriodCreateObjectRequest {
            body: None,
            icon: None,
            name: None,
            properties: None,
            template_id: None,
            type_key,
        }
    }
}

