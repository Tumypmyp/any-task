/*
 * Anytype API
 *
 * This API enables seamless interaction with Anytype's resources - spaces, objects, properties, types, templates, and beyond.
 *
 * The version of the OpenAPI document: 2025-05-20
 * Contact: support@anytype.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApimodelPeriodUpdatePropertyRequest {
    /// The key to set for the property; ; should always be snake_case, otherwise it will be converted to snake_case
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    /// The name to set for the property
    #[serde(rename = "name")]
    pub name: String,
}

impl ApimodelPeriodUpdatePropertyRequest {
    pub fn new(name: String) -> ApimodelPeriodUpdatePropertyRequest {
        ApimodelPeriodUpdatePropertyRequest {
            key: None,
            name,
        }
    }
}

