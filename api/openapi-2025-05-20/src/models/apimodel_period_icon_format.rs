/*
 * Anytype API
 *
 * This API enables seamless interaction with Anytype's resources - spaces, objects, properties, types, templates, and beyond.
 *
 * The version of the OpenAPI document: 2025-05-20
 * Contact: support@anytype.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApimodelPeriodIconFormat : The format of the icon
/// The format of the icon
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ApimodelPeriodIconFormat {
    #[serde(rename = "emoji")]
    IconFormatEmoji,
    #[serde(rename = "file")]
    IconFormatFile,
    #[serde(rename = "icon")]
    IconFormatIcon,

}

impl std::fmt::Display for ApimodelPeriodIconFormat {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::IconFormatEmoji => write!(f, "emoji"),
            Self::IconFormatFile => write!(f, "file"),
            Self::IconFormatIcon => write!(f, "icon"),
        }
    }
}

impl Default for ApimodelPeriodIconFormat {
    fn default() -> ApimodelPeriodIconFormat {
        Self::IconFormatEmoji
    }
}

