/*
 * Anytype API
 *
 * This API enables seamless interaction with Anytype's resources - spaces, objects, properties, types, templates, and beyond.
 *
 * The version of the OpenAPI document: 2025-05-20
 * Contact: support@anytype.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PaginationPeriodPaginationMeta : The pagination metadata for the response
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PaginationPeriodPaginationMeta {
    /// Indicates if there are more items available beyond the current result set
    #[serde(rename = "has_more", skip_serializing_if = "Option::is_none")]
    pub has_more: Option<bool>,
    /// The maximum number of items returned in the result set
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    /// The number of items skipped before starting to collect the result set
    #[serde(rename = "offset", skip_serializing_if = "Option::is_none")]
    pub offset: Option<i32>,
    /// The total number of items available for the endpoint
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i32>,
}

impl PaginationPeriodPaginationMeta {
    /// The pagination metadata for the response
    pub fn new() -> PaginationPeriodPaginationMeta {
        PaginationPeriodPaginationMeta {
            has_more: None,
            limit: None,
            offset: None,
            total: None,
        }
    }
}

