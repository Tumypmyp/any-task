/*
 * Anytype API
 *
 * This API enables seamless interaction with Anytype's resources - spaces, objects, properties, types, templates, and beyond.
 *
 * The version of the OpenAPI document: 2025-05-20
 * Contact: support@anytype.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApimodelPeriodSortProperty : The key of the property to sort the search results by
/// The key of the property to sort the search results by
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ApimodelPeriodSortProperty {
    #[serde(rename = "created_date")]
    CreatedDate,
    #[serde(rename = "last_modified_date")]
    LastModifiedDate,
    #[serde(rename = "last_opened_date")]
    LastOpenedDate,
    #[serde(rename = "name")]
    Name,

}

impl std::fmt::Display for ApimodelPeriodSortProperty {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CreatedDate => write!(f, "created_date"),
            Self::LastModifiedDate => write!(f, "last_modified_date"),
            Self::LastOpenedDate => write!(f, "last_opened_date"),
            Self::Name => write!(f, "name"),
        }
    }
}

impl Default for ApimodelPeriodSortProperty {
    fn default() -> ApimodelPeriodSortProperty {
        Self::CreatedDate
    }
}

