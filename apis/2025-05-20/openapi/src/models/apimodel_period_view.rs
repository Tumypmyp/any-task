/*
 * Anytype API
 *
 * This API enables seamless interaction with Anytype's resources - spaces, objects, properties, types, templates, and beyond.
 *
 * The version of the OpenAPI document: 2025-05-20
 * Contact: support@anytype.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApimodelPeriodView {
    /// The list of filters
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<models::ApimodelPeriodFilter>>,
    /// The id of the view
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The layout of the view
    #[serde(rename = "layout", skip_serializing_if = "Option::is_none")]
    pub layout: Option<Layout>,
    /// The name of the view
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The list of sorts
    #[serde(rename = "sorts", skip_serializing_if = "Option::is_none")]
    pub sorts: Option<Vec<models::ApimodelPeriodSort>>,
}

impl ApimodelPeriodView {
    pub fn new() -> ApimodelPeriodView {
        ApimodelPeriodView {
            filters: None,
            id: None,
            layout: None,
            name: None,
            sorts: None,
        }
    }
}
/// The layout of the view
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Layout {
    #[serde(rename = "grid")]
    Grid,
    #[serde(rename = "table")]
    Table,
}

impl Default for Layout {
    fn default() -> Layout {
        Self::Grid
    }
}

