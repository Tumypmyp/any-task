/*
 * Anytype API
 *
 * This API enables seamless interaction with Anytype's resources - spaces, objects, properties, types, templates, and beyond.
 *
 * The version of the OpenAPI document: 2025-05-20
 * Contact: support@anytype.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApimodelPeriodCreatePropertyRequest {
    #[serde(rename = "format")]
    pub format: models::ApimodelPeriodPropertyFormat,
    /// The key of the property; should always be snake_case, otherwise it will be converted to snake_case
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    /// The name of the property
    #[serde(rename = "name")]
    pub name: String,
}

impl ApimodelPeriodCreatePropertyRequest {
    pub fn new(format: models::ApimodelPeriodPropertyFormat, name: String) -> ApimodelPeriodCreatePropertyRequest {
        ApimodelPeriodCreatePropertyRequest {
            format,
            key: None,
            name,
        }
    }
}

